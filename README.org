#+TITLE: Kopie bezpieczeństwa
#+SUBTITLE: Projektowanie systemów bezpieczeństwa
#+AUTHOR: Patryk Gronkiewicz 164157, Piotr Krawiec 164165
#+EMAIL: 164157@stud.prz.edu.pl, 164165@stud.prz.edu.pl
#+OPTIONS: toc:nil
#+LANGUAGE: pl

* Wybrane programy
** Rsync + tar
Jest to najprostsza opcja dostępna na praktycznie każdym urządzeniu z Linuxem. Rozwiązanie to składa się w rzeczywistości z dwóch programów - =rsync= oraz =tar=. Pierwszy z nich służy do kopiowania plików lokalnie oraz na serwery zdalne, natomiast drugi generuje pojedynczy plik z naszego backupu. =tar= pozwala także na zmniejszenie rozmiaru kopii dzięki wykorzystaniu kompresji.

W naszym przypadku przydatne okazało się też polecenie =date=, które posłużyło do nadawania unikalnych nazw kolejnym kopiom zapasowym. Dodatkowo zastosowano =cron=-a, który pozwolił nam na zaplanowanie wykonywania kopii.
** Duplicati
W naszym zestawie rozwiązań jest to najbardziej multiplatformowe i proste do użycia rozwiązanie - jest proste do ustawienia zarówno na Windowsie, Linuxie, jak i macOS. Po zainstalowaniu go możemy zarządzać wszystkimi jego ustawieniami z pomocą interfejsu przeglądarkowego. Jako jedyne niestety nie ma opcji ustawiania z pomocą linii komend, co można rozwiązać z pomocą zewnętrznych pakietów dostępnych np. w =pip=-ie.
** Restic
Rozwiązanie najbardziej rozbudowane, lecz wymagające więcej doświadczenia w konfiguracji. Pozwala na stosunkowo proste skonfigurowanie retencji, połączenia do mniej typowych chmur takich jak S3, lecz nie uruchamia się automatycznie. Do odpowiedniego działania wymagane jest, aby użyć planowania backupów przez CRON lub =systemd-timers=.

Twórcy twierdzą, że jest:
+ prosty w obsłudze
+ Efektywny
+ Bezpieczny
+ Weryfikowalny
+ Wolny jak w wolności[fn:freedom]
[fn:freedom] (en. /Free as in freedom/ - Richard Matthew Stallman) - dotyczy wolnościowego podejścia do oprogramowania

* Sposób działania
** Rsync + tar
** Duplicati
** Restic
Restic działa na zasadzie kopii przyrostowych - dzięki temu jest zdolny do tworzenia stosunkowo małych kopii nawet przy dużych ilościach danych. Pozwala także na łatwe przywrócenie kopii przez interfejs terminala. Jego działanie jest analogiczne do podmontowania np. pendrive.

Kopie zapasowe prowadzone przez Restica można bardzo prosto zaszyfrować, jak i wysyłać na różne rodzaje pamięci sieciowych - od S3, przez SSHFS i WebDav aż po rozwiązania typowo konsumenckie jak Google Drive, Mega czy OneDrive. W przypadku części integracji wymagane jest użycie Rclone, który jest interfejsem do połączenia się z daną chmurą. Bez najmniejszego problemu jest także dostępny backup lokalny, który tworzony jest w niemal identyczny sposób jak ten chmurowy.

Każda kopia zapasowa ma swoje repozytorium - miejsce, gdzie pliki odpowiadające za kopię są trzymane. Jest to miejsce, którego nie chcemy stracić (ale i tak prawdopowodobnie mamy inny backup, jeśli trzymamy się zasad 😉).
* Retencja
** Rsync + tar
** Duplicati
** Restic
* Typy kopii
** Rsync + tar
** Duplicati
** Restic
* Chmura
** Rsync + tar
** Duplicati
** Restic
